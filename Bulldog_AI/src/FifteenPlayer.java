package src;
/********************************************************/
/* Wyatt McCurdy                                        */
/* Login ID: wyatt.mccurdy@maine.edu                    */
/* COS 520, Spring 2025                                 */
/* Programming Assignment 6                             */
/* FifteenPlayer class: extends Player class            */
/*           A FifteenPlayer always rolls until         */
/*           it gets to fifteen points                  */
/*      See Kettering University, CS-101, Prog 6        */
/*                                                      */
/* Code generated by GPT 4o                             */
/********************************************************/
 
public class FifteenPlayer extends Player {

    /********************************************************/
    /* Constructor: FifteenPlayer                           */
    /* Purpose: Create a default FifteenPlayer              */
    /* Parameters:                                          */
    /*   none                                               */
    /********************************************************/
    public FifteenPlayer() {
        this("Fifteen");
    }

    /********************************************************/
    /* Constructor: FifteenPlayer                           */
    /* Purpose: Create a new FifteenPlayer object           */
    /* Parameters:                                          */
    /*   String name:  the name of the Player being created */
    /********************************************************/
    public FifteenPlayer(String name) {
        super(name);
    }

    /*
     * This method will decide whether or not to continue rolling based on whether or not to continue
     * rolling based on logic in the play method. 
     */
    public boolean evaulate_roll(int roll) {
        // update score
        setTurnScore(getTurnScore() + roll);

        if (roll == 6) {
            setTurnScore(0);
            return false;
            
        } else if (getTurnScore() + roll >= 15) {
            setScore(getScore() + getTurnScore()); // Update overall score if the 
            return false;
        }
        return true;
    }

}