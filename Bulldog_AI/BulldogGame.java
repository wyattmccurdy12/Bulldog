/********************************************************/
/* Wyatt McCurdy                                        */
/* Login ID: wyatt.mccurdy@maine.edu                    */
/* COS 520, Spring 2025                                 */
/* Programming Assignment 6                             */
/* BulldogGame class: Manages the game between two      */
/*           players until one reaches 104 points       */
/*      See Kettering University, CS-101, Prog 6        */
/*                                                      */
/* Code generated by GPT 4o                             */
/********************************************************/
 
import java.util.Scanner;
import java.util.List;
import javax.swing.JTextArea;
import javax.swing.JOptionPane;

public class BulldogGame {

    private static final int WINNING_SCORE = 104;
    private List<Player> players;
    private JTextArea gameLog;

    public BulldogGame(List<Player> players, JTextArea gameLog) {
        this.players = players;
        this.gameLog = gameLog;
    }

    public void startGame() {
        boolean playAgain = true;

        while (playAgain) {
            log("Welcome to Bulldog Game!");

            int[] scores = new int[players.size()];

            while (true) {
                for (int i = 0; i < players.size(); i++) {
                    Player player = players.get(i);
                    log("\nPlayer " + (i + 1) + " (" + player.getName() + ")'s turn:");
                    scores[i] += player.play();
                    log("Player " + (i + 1) + " (" + player.getName() + ")'s total score: " + scores[i]);

                    if (scores[i] >= WINNING_SCORE) {
                        log("\nPlayer " + (i + 1) + " (" + player.getName() + ") wins!");
                        break;
                    }
                }

                boolean gameWon = false;
                for (int score : scores) {
                    if (score >= WINNING_SCORE) {
                        gameWon = true;
                        break;
                    }
                }
                if (gameWon) break;
            }

            int response = JOptionPane.showConfirmDialog(null, "Would you like to play again?", "Play Again", JOptionPane.YES_NO_OPTION);
            playAgain = (response == JOptionPane.YES_OPTION);
        }

        log("Thank you for playing Bulldog Game!");
    }

    private void log(String message) {
        gameLog.append(message + "\n");
        gameLog.setCaretPosition(gameLog.getDocument().getLength());
    }

    public static void main(String[] args) {
        // Example usage:
        // List<Player> players = Arrays.asList(new WimpPlayer(), new RandomPlayer());
        // JTextArea gameLog = new JTextArea();
        // BulldogGame game = new BulldogGame(players, gameLog);
        // game.startGame();
    }
}